[Document(page_content="[Music] without us noticing modern life has been taken over as we search for love shop online travel the world even as we save lives there are step-by-step instructions working quietly behind the scenes more and more they're ruling our knives they're called algorithms algorithms are everywhere these bite-sized chunks of maths have become central to our daily lives but because they're invisible we tend to take them for granted even misunderstand them what is the most efficient way to sort a million 32-bit integers they're the secret to our digital world and so much more in this program I'm going to show you some of my favorite algorithms to reveal where they came from algorithms are ancient how they work challenge is to find the shortest route these are the rough instructions that you would use for returning to your starting point what they might be able to do in the future the algorithm is kind of writing itself or absolutely and how we can't live without them even when we're baking a cake we're following an algorithm as a mathematician I love algorithms not only are they impressive problem solvers they're also strangely beautiful tapping into the mathematical order that underpins how the universe works welcome to the weird and wonderful world of algorithms [Music] most of us carry one of these around now you might have noticed that when you take a photo with your phone then it draws a box around any face like this this is the result of a special face detection algorithm and it helps to keep the face in the photo in focus like all algorithms this one solves a problem in this case finding a human face while it's not fooled by a face made of fruit it does detect a human face in a photo so how does it do it at their root algorithms are little more than a series of step-by-step instructions this one works by methodically scanning the image looking for four particular abstract patterns associated with a face when these are detected one after another then the algorithm indicates it's found a human face the process taps into the underlying pattern behind all faces no matter what shape or size the end result is just one example of how algorithms have made our lives easier we tend to associate algorithms with computers smartphones and the internet but they're not exclusive to the world of technology my day job is professor of mathematics at Oxford University and one of the things I enjoy most is keeping the students on their toes everyone here we're playing a mathematical game with a jar full of chocolates and one Red Hot Chilli the aim is not to be left for the Chili's at the end but what these students don't know is that I'm playing it with the help of an algorithm okay okay I'm gonna go first so remember you can take one two or three chocolates at a time no I'm not a greedy guy so I'll just take one now your turn each player takes on their turn between one and three chocolates second - okay so I'm going to take two whatever my opponent does my algorithm tells me how to respond hey Otto - and your turn again three I'll take one and yes let me reveal how the algorithm I was using helped me win anyway to learn so the key is to think about grouping things in fours 13 chocolates divides into three groups of four with one left over so by taking one chocolate in the first round and then four - whatever the other player takes in the subsequent rounds this algorithm ensures that the other player is always left with the chili the essence of a really good algorithm it's magic if you like it's mathematics the best algorithms are those that tap into the underlying mathematical structure hiding beneath a problem they pop the chili back I'll be introducing you to some of the algorithms that have become the beating heart of modern life but first I want to show you that for all their modern applications algorithms are extremely old in fact they predate computers by thousands of years the oldest algorithm we know of was devised to solve a mathematical problem was first written down by the ancient Greek mathematician Euclid Euclid's algorithm as it's known is a method for finding the greatest common divisor the greatest common divisor is the largest number that will divide into a pair of other numbers without leaving a remainder so in this case four divides into both eight and twelve without a remainder it's simple to find for small numbers but much more tricky for large ones while Euclid was the greatest mathematician of his day his algorithm could have made him a fortune as a Tyler let me show you why imagine you've got a rectangular shaped floor and you want to find the most efficient way to toilet with square tiles in other words what's the largest square tile that will exactly divide the dimensions of the floor with nothing left over this is in fact a geometric version of the greatest common divisor problem the dimensions of the floor are the two numbers and the size of the tiles which we're going to try and work out is their greatest common divisor we're going to follow Euclid's algorithm step by step to show how it is able to find the perfect sized square tile for this floor according to Euclid's algorithm we need to start filling the rectangle with square tiles corresponding to the smallest the two dimensions this is the first stage of the job Euclid's algorithm then tells us to do exactly the same thing again with this rectangle at each stage the algorithm tells us to select square tiles corresponding to the shortest side of the rectangle so this time our square tiles perfectly fill the leftover space now my square tile has dimensions 15 by 15 so Euclid's algorithm tells us that the greatest common divisor of 150 and 345 is 15 I'm not suggesting that you use Euclid's algorithm every time you need to order some tiles but the amazing thing is that this simple step by step method finds the perfect square tile whatever the dimensions of the floor Euclid's algorithm may appear to be just a mathematical technique but it very elegantly fulfills all the criteria for an algorithm it's a precisely stated set of instructions the procedure always finishes and it can be proven that it works in all cases the power of algorithms is that you don't have to reinvent the wheel each time there general solutions to problems this holds us true for ancient algorithms as for modern ones in 1998 in this garage in Menlo Park California an important piece of algorithmic history was made inside were two PhD students from Stanford University Larry Page and Sergey Brin their aim was to come up with a search engine that could find things efficiently on the World Wide Web [Music] out of these humble beginnings Google was born but Google wouldn't be Google if it wasn't for the algorithm that Larry and Sergey created called PageRank [Music] pagerank was the algorithm at the heart of the first incarnation of the google search engine now technically it's not a search algorithm but a ranking algorithm so when you type a a query into a search engine then there are literally millions of pages which will match that query what PageRank does is to rank all of those pages such as the one at the top is the one that you're most likely to be interested in Larry and Sergey came up with the idea to do PageRank to use it as a ranking signal to improve the quality of web search I remember myself at the time you used the web search engine like Alta Vista you would have to click that next page link a lot of times to find what you were looking for PageRank was one of the reasons why Google was so much better than than the existing search engines at the time the inner-workings of PageRank are hidden from view on the World Wide Web so to reveal how it does its job we're going to use the PageRank algorithm to rank the players of a football team PageRank looks at two things it looks at the incoming links to a web page that is the other pages that link to the page and it looks at how important those pages are in our demonstration to show the cleverness of the PageRank algorithm the players in the football team are the web pages and the passes between them are the web links the input for the algorithm generally speaking the PageRank algorithm will give a higher rank to a website if it's got a lot of links coming from other websites so in the case of football if a player gets more passes from the rest of the team then they'll be ranked higher it's not quite that simple because the PageRank algorithm actually gives more weight to a link from a website that itself has a high PageRank so actually a pass from a popular player is worth more than a pass from a player is hardly involved in the game at all this is a visualization of the algorithm at work the stats are the players current ranking the output of the algorithm and every time there's a pass these rankings are updated when Google uses this algorithm it only changes one thing the input in place of passes it uses web links note that the importance of a page depends on the importance of the pages that link to it this means that you have to compute PageRank for all the pages at the same time and you actually have to repeat the computation because each time you update the importance of all the pages and that in turn will influence the importance of the pages that those pages link to at the end of the match the job of the algorithm is done if we wanted to search for the key player in the team this is page ranks answer player 11 as the highest page rank score I think the page rank algorithm is probably my favorite algorithm of all time it's amazing that can be applied not just to the world wide web but analyzing a football match as well but for me it's the fact that there's a beautiful bit of mathematics and it's hard that always seems to find the website I'm looking for within Google I think PageRank is seen as a very important part of Google's early development PageRank was the secret to why the search engine that Larry and Sergey built in the 1990s was so successful now Google handles over 3.5 billion searches every day it's the world's most popular search engine and the company is worth more than four hundred and fifty billion dollars not bad for two PhD students working out of a garage [Music] [Applause] algorithms are simple step-by-step recipes inventing them requires incredible creativity and genius but using them is just a matter of following instructions and this is why algorithms are perfect for computers [Music] computers that are just machines they just do repetitive tasks phenomenal speeds unbelievable speeds so they're absolutely perfect for performing these repetitive tasks that are unambiguously defined and can be done in a finite amount of time the Bureau code is basically making an algorithm specific so the algorithm is the kind of idea how would you solve the problem these are the rough instructions that you would use and then that can be translated into particular code lots of types of algorithms have been created with the computer in mind some of the most important are sorting algorithms now the job of the sorting algorithm is to put things in order and they have lots of uses for example on the internet information gets broken down into packets of data which then gets sent across the web now to reassemble that data sorting algorithms are absolutely crucial to putting this data back in the correct order so that we can view the picture or read the email we've just been sent [Music] this is the system Development Corporation in California it's considered to be the world's first computer software company and it was here in 1963 that two computer scientists first formally wrote down one of the most iconic sorting algorithms of all time it's called bubble sort and here's an example of bubble sort in action sorting blocks instead of numbers it gets its name because with each round of the algorithm the largest unsorted object bubbles to the top like all our algorithms so far there's method in the madness to see how this algorithm works we're going to use it to sort eight objects now the bubble sort algorithm says to consider the objects in pairs and swap them over if they're in the wrong order so we're going to start at this end here and work our way to the top so I consider these two they're in the wrong order so I swap them over consider the next pair they're in the right order so I leave them as they are consider this pair they're on the wrong order so I swap and we just continue doing this now the bubble sort algorithm says to go back to the beginning and repeat the process over and over again until the objects are in order the algorithm stops where there are no pairs to swap around so the bubble sort algorithm has successfully done its job I've now got the objects perfectly ordered according to ascending height bubble sword is elegantly simple and straightforward but if the scale of the sorting task is huge say organizing fast Suede's of data then there might be better sorting algorithms for the job this is John von Neumann the scientific genius who helped pioneer the modern computer game theory the atomic bomb and as it turns out invented a sorting algorithm he devised it to work on this one of the world's earliest electronic computers which he'd helped design the algorithm is called merge sort the merge sort algorithm works on a principle of divide and conquer and it consists of two parts the first bit is the dividing part this involves splitting everything into smaller groups and now comes the conquering bit the groups are now merged back together but as I merge the two groups I compare the sizes of the objects one pair at a time so that the merged group becomes sorted [Music] [Music] [Applause] now the mergesort algorithm might look rather similar to the bubble sauce but where it comes into its own is that with a larger number of objects it's much much faster so let's see how merge sort compares in speed to bubble sort it's time for a battle of the algorithm here we've got a bubble sort on the bottom and merge sort on the top and we've got them sorting a thousand objects now although they'll both produce the same end result you can already see merge sort is getting there much faster and this difference in performance gets more pronounced the more objects they're asked to sort what is the most efficient way to sort a million 32-bit integers well I'm sorry maybe I think that's not it I I think I think the the bubble sort would be the wrong way to go [Applause] come on who told it miss mergesort beats bubblesort hands down for sorting large amounts of data but in the crazy world of algorithms there are many many different ways to sort at the last count there were over 20 different types of sorting algorithms all weirdly achieving the same result but by different means [Music] so there's a bubble sort there's mergesort insertion sort there's heapsort there's quicksort to sort it gnome sort there's a pigeonhole sort which is also called radix sort or bogus art which might never finish [Music] there's no such thing as the best sorting algorithm each has its own pros and cons and which one gets used often depends on the specifics of the problem I think the beauty of studying algorithms is to try to aspire for solutions with our as elegant and efficient as possible why actually thin bubble sorts very pretty I like it mergesort beautiful we really couldn't live without them sorting algorithms bring order to the world [Music] so far we've seen algorithms tackle the tidy problems of sizing our bathroom tiles and sorting our data but how well do they cope with a messy world of love online dating is really popular these days in fact one survey suggests that over a third of recent marriages started online are these dating websites work is that they use something called a matching algorithm they searched through the profiles try to match people up according to their likes and dislikes personality traits and so on in fact the algorithms seem to be better than humans because recent research has shown that those who meet online tend to be happier have longer marriages now ask you to receive your prices His Majesty the King in fact matching algorithms have quite a lot to brag about because in 2012 for the first time a Nobel Prize was awarded because of an algorithm a matching algorithm created by the late David Gale and the mathematician Lloyd Shapley seen here receiving his share of the prize the story begins in the 1960s when Gale and Shapley wanted to solve a problem concerned with college admissions how to match up students to colleges said everyone got a place but more importantly was happy even if they didn't get their first choice they called it the stable marriage problem the stable marriage problem goes like this suppose you've got four women and four men they want to get married now they've ranked each other according to their preferences so for example the Queen of Hearts here first choice is the king of clubs second choice King of Diamonds and the last choice is the King of Hearts so the challenge here is to play cupid and pair up the kings and queens such a each one gets a partner but more importantly that the marriages are stable a stable marriage means that the kings and queens don't necessarily get their first choice but they get the best on offer for example if I paired the King of Hearts in the Queen of Hearts and the king of spades and the Queen of Spades this would be an unstable marriage because the King of Spades doesn't really like the Queen of Spades he'd prefer the Queen of Hearts the Queen of Hearts in her turn doesn't really like the King of Hearts she'd prefer the king of spades so these two are going to run off together in this pairing where there's a problem there's an algorithm not far behind in 1962 Gale and Shapley came up with their Nobel prize-winning algorithm a step by step recipe which always finds perfectly stable marriages so in the first round of the algorithm the Queen's all propose their first choice Kings so the Queen of Spades first choice is the king of spades she proposes to the King of Spades the Queen of Hearts first choice is the king of clubs so she proposes to the king of clubs queen of Diamonds first choice is the king of spades and the queen of clubs first choice is also the king of spades so if spades seems to be the Darci of this royal court now the king of Spain's has got three proposals so he chooses his most popular queen who was actually the queen of diamonds and rejects the other two so we have two provisional engagements two rejections we now remove the rejected Queens first choices and it's time for round two so the Queen of Spades can propose to the King of Diamonds and the queen of clubs proposes to the king of clubs but now the king of clubs has got two proposals and actually they prefer the queen of clubs so he rejects the Queen of Hearts his provisional engagement on the first round of the algorithm we have to start again in each round the rejected Queens proposed to the next King on their list and the Kings always go for the best offer they get this round of the algorithm she proposes to the King of Hearts and finally everyone's paired up with a single Queen and King and all the marriages are stable the Galle Shapley algorithm is now used all over the world in denmark to match children to daycare places in hungary to match students to schools in new york to allocate rabbis to synagogues and in china germany in spain to match students to universities whilst in the UK it's led to the development of a matching algorithm that for some people has saved their lives at the age of twenty Saraya in south london was diagnosed with a chronic kidney disease and told she needed a transplant I was on dialysis for 18 months and very unwell couldn't go to work and had no social life it was actually Hospital three times a week for my treatment and home a close friend was willing to donate but their tissue types were not compatible instant alban's Tamir was seriously ill and his wife Lindsay wanted to donate but they had the same problem we went through all the blood tests and all the workup and it turned out that we were incompatible blood groups often kidney patients who are fortunate enough to have a would-be donor find that there's a mismatch between their donors blood group or tissue type but since 2007 the NHS has been using a special matching algorithm to find potential matches for willing donors to kidney patients all over the UK when we first looked at this problem we really underestimated the complexity and originally we just started with swaps between two pairs so is very simple but it soon became obvious that we needed something much more complex I became in touch with Rachel Johnson at the NHS and we then got involved at that stage being able to design algorithms which would allow not just pairwise exchanges but also exchanges among three couples as well the algorithm considers several scenarios the simplest is a two-way stop with two couples exchanging kidneys more complicated is a three-way swap where the kidneys get passed around in a cycle there are 200 patients in each of our matching runs we need to look for all the possible transplants and it's surprising how many there are there are literally you know hundreds sometimes thousands of possibilities it's something that just could not be achieved without the algorithm one day Surya received a call that a match had been found 400 miles away with Linda a donor living in Bowness near Edinburgh her husband's dad needed a new kidney and he'd been ill for a bit a time and I wasn't a perfect match and I then got a phone call and it was all go from there we've got the initial phone call saying that we've been matched up in a three-way pool you just nervous that it's not gonna go ahead because your life depends on it for the matching couples all the operations had to happen simultaneously it was a major logistical challenge when my diner went to theater they called over to check that my dad was also in Newcastle going to theater and they forgot the exact same time they make the call the kid needs come out I think they went by motorbike we were told they make off a helicopter so I thought at least one bit of me might have been an icon so but no it went very little fake and eventually went ahead thankfully in December best Christmas present hmm nationally I just imagined it was doctors behind beer matching people up off this list I'm so yes but first change that comes through your mouths at the end of the day it's a great scheme and it's still fairly recent and many years girl would have had this chance I feel a lot of gratitude to Linda and also to the algorithm so yeah I'm very grateful so far more than 400 patients have benefited from the NHS scheme and it's special matching algorithm it's only when we actually see media articles and we actually start to think I'll hold on that person might have actually had that much through the october matching runs pairwise exchange and so on that you actually start to see that the stories would have behind the anonymous data it's quite funny because dave is always really concerned that the algorithm will take a long time to run and you know it's been up to 30 minutes and he gets concerned but actually 30 minutes it you know to us it's incredible that it can do all of that in 30 minutes so far we have seen how algorithms are capable of amazing feats from solving abstract mathematical problems to helping us find stuff on the world wide web and the key thing for all of these algorithms is their speed so the important feature of good algorithm is first that it better be correct but once you know that it's correct it's also important that it runs quickly there's no good having an algorithm it takes and longer than you life to make to run if you're wanting the results tomorrow this face detection algorithm is an example of an efficient algorithm because it's efficient it's able to run in real time and that's what makes it useful but just as in real life some problems are harder than others every now and then algorithms meet their match I think the most common misconception about algorithms is just that there's you know the algorithms can do anything I think people don't really know about the limits that you know some problem simply cannot be solved by efficient algorithms there are some places where efficient algorithms cannot go loins in the sand that can't be crossed the trouble is knowing which problems they can solve and which they can't take this rubik's cube and imagine the more general challenge of trying to solve a cube of arbitrary dimensions so for example with 50 squares down each side now you might expect this to be one of the really fiendishly difficult problems but actually it belongs in the easy camp we know an algorithm that can solve the general rubik's cube in a reasonable amount of time although it looks hard this problem can be cracked by efficient algorithms [Music] however here's one that definitely can't imagine you've got a drafts board of arbitrary size and an arrangement of pieces on the board the challenge is to work out whether white can force a win from this position now drafts is a pretty easy game but it's been mathematically proven that there's no algorithm that can solve this problem efficiently it's an inherently difficult problem the only way to solve this puzzle is through sheer hard slog working out all the millions of possibilities so this problem lies firmly beyond the reach of efficient algorithms it can't be solved quickly but for some problems how hard they are is not clear-cut this is a large Sudoku is got 625 squares one of the nice things about Sudoku is that once you've found a solution it's relatively straightforward to check whether or not it's right and this is true however large the puzzle in this case I just got a check each row column and block doesn't feature a number twice Sudoku belongs to a very special category of problems that all share this characteristic that once you've come up with a solution it's always easy to check it the mystery is whether there's an efficient algorithm to find the solution in the first place and Sudoku is not alone there are lots of problems like this the most intensely studied of them all is known as the Traveling Salesman problem [Music] a traveling salesman travels door-to-door city to city selling anything from brushes and hoover's to double glazing it sounds like a straightforward job but all traveling salesmen face the same question what's the shortest route to take so important is this problem that the clay mathematics Institute has offered a million dollars for whoever can find an efficient algorithm or prove that none exists the Traveling Salesman problem goes like this imagine you're a Salesman you've got to visit a list of cities represented by the red dots the challenge is to find the shortest route so you visit each city once before returning to your starting point now you might imagine the best thing is to just consider all the routes like this the method of checking all possibilities is a type of algorithm and for three cities it works fine because there are only three possible routes to check but what if we add two more cities to the list with five cities there are 60 different possible routes and if we add another city then there are 360 possible routes and for ten cities there are over one point eight million possible routes if our algorithm chugged through them checking all of these at a rate of ten per second it would take two days before it found the shortest so you can see a method of trying all the different possibilities a kind of brute-force algorithm if you like it's just simply impractical so if somebody found a fast algorithm for the traveling salesmen that would be hugely significant if one of my students came up with an efficient algorithm for the Traveling Salesman problem I would get them to explain it to me I would kill him and then I won't claim the clay price a million dollars but I think my students are safe the problem crops up in lots of areas from soldiering circuit boards to planning the roots for supermarket deliveries but has the Traveling Salesman problem secretly already been solved a team of scientists working at rotten state research in HAARP ndon have turned to nature to see if it has found the answer they are carrying out an elaborate experiment to study how the Traveling Salesman problem is tackled by the bumblebee these have to forage for nectar in order to provision their hive and so they have to visit possibly hundreds of flowers on each trip what they want to do is find an efficient way to go between all these flowers that they visit the humble bumble bee faces its own Traveling Salesman problem the flowers are just like the cities and the bee is the traveling salesman one bee will go out foraging many many times every day so over the course of the day it really helps to take the most efficient possible route so what we're doing is trying to figure out exactly what rules they're using to to narrow down the possibilities [Music] Joe has laid out five feeders which play the role of flowers each feeder has just enough nectar to ensure the bee has to visit all five to give it a full honey stomach how are you actually knowing where it's going for this we're using harmonic radar so as that spins round and round it's emitting a radar signal and we've attached a small antenna to the back of the bee which then reflects the signal from the radar and so this allows us to see exactly where the bee is gone as she moves around the field so how does the bumblebee tackle the Traveling Salesman problem with five feeders there are a total of 60 possible routes the shortest is around the outer edge this heat map shows the path taken by a single B at first it's simply discovering the positions of the feeders then the B appears to methodically change different parts of the route to see if it can make it shorter within 20 trips its honed in on an efficient route [Music] this route is not always the absolute shortest but for the B it's good enough [Music] that's amazing that just after a very few tries they've got to something which is is efficient enough for them to do their foraging yes that's right they can't spend days or even you know could take months or years to try every possibility so they have to very quickly find a route that they can do again and again again in order to efficiently provide food fantastic I think the bees become my favorite insect now and so there's Ozzy a mathematician at heart absolutely let's be clear bees are not about to be awarded a million dollars they've not miraculously solved the Traveling Salesman problem because they don't always find the shortest route but their algorithm is a clever approach in maths it's known as heuristics algorithms that are efficient that don't find the perfect solution but get as close as they can [Music] [Music] the same heuristic approach has been used to develop an algorithm for Heathrow Airport takeoff that is a nice big bed for three sir Heathrow handles over 1,300 flights a day its Europe's busiest airport zero to take off from where to some right surf has been 240 degrees and three dots the challenge for air traffic control is to maximize the number of aircraft departing every hour and ensure that the airport operates both efficiently and safely one of the key decisions is the order of takeoff medium aircraft which will be separated Worman apart behind that then you can see a 747 which is a large aircraft medium aircraft need to be separated from the turbulence produced by larger aircraft so the ordering of sizes is crucial guide your sequence with for takeoff devolves really blocking together groups of aircraft so you want large aircraft to be grouped together medium aircraft should have group together and that allows the separation between those aircraft to be minimized the other factor that needs to be considered when planning takeoff is where the planes are heading what want to be going to the north at once we go to the south and necks going to North next going to the South if all the aircraft will throw it in the same direction the separation would be much greater and we wouldn't use the railways as efficiently all controllers are sitting in the control towers thinking I've got all these aircraft that going north all these aircraft they're going south I've got these ones that are large ones so I want to try and group all the large ones together so don't have to go from a large one to a small one and it's a very complex poland to solve in their heads in 2013 an algorithm joined the team its job is to predict the most likely order for takeoff and advise air traffic control when aircraft should pushed back from the gates to do this involves nothing less than simulating the entire outward-bound operation of the airport carrying out millions of calculations every second the algorithm works by trying to predict what order the aircraft are going to take off in if it knows what order it they can take off in then it can work backwards and say if it needs to take off at this time then it needs to enter the runway queue at this time then it needs finishing its taxi at this time therefore it needs to start its taxi operation at this time in that case it needs to finish its push back by this time so it needs to start its push back by this time and it can work all the way back from what time it should take off to what time it should start pushing back the output of the algorithm is given to air-traffic control through the airport's internal computer system and displayed the pilot at the gate in the form of the tea set the recommended pushback time the pilot can look on the stand entry system to actually see what time he is expecting to depart the biggest benefit of the algorithm is that it means you can hold aircraft under stand for longer without them taking off any later so there's no loss for any passengers in terms of delays what you can do is you can start your engines later in actual fact if we sailed two minutes taxi time on the way to the end of runway over a year that's actually 15 million pounds worth of fuel saving the Heathrow sequencing algorithm shows just what can be accomplished with the heuristic approach just like the B's the algorithm is not finding the absolute perfect solution all the time but nevertheless makes a tough job that bit easier we're very proud of the algorithm because it actually now we feel models the real world and is of use [Music] in the beginning algorithms were created by mathematicians for mathematicians and over the last century algorithms have been created for computers but perhaps our relationship is about to go through a dramatic revolution [Music] at Microsoft Research in Cambridge scientists are using new techniques to develop algorithms blurring the boundary between inventor and the algorithm itself this is the Kinect skeletal tracking algorithm the amazing thing is that it's able to identify the different parts of my body so you can see this colored the top of my head in red and my right hand here in blue and can see it's colored my neck green now this algorithm has never met me before doesn't know how I'm going to move in space but just using the data coming from this special camera here measuring the distance from the camera to my body it's able to produce this map whatever posture I take using nothing more than the input from the special depth sensing camera the algorithm is able to accurately identify pixel by pixel the different parts of my body it was developed for the Microsoft Xbox console to track the movement of a player's body posture in real time but just as remarkable as what this algorithm can do is the process behind how it was created as researcher Jamie chaton explains what's happening is that every pixel in the image we are running an algorithm called a decision tree and you can think of a decision tree as a game of 20 questions so the decision tree is sort of taking a pixel say on my hand and trying to decide okay I've got a color that blue because that's that's on the hand problem on my body yes the key to a decision tree is the fact that the 20 questions that you ask are not the same for every pixel that we're trying to classify and the the full set of the possible questions that could be answered is exponential it's 2 to the 20/20 right okay so that's over a million questions a lot of questions you can have to program in there yes it would take far too long and be far too error-prone for us as humans to program that way so the algorithms kind of writing itself for absolutely the algorithm was not designed by Jamie but instead through a process called machine learning it involved showing the algorithm millions of training images of bodies in different poses and of various shapes and sizes from the very fat to the very thin the very short the very tall and from this the algorithm essentially learned by example devising its own rules where our intelligence comes in as the designers of the system is in in not in programming the algorithm per se but in designing the training data set to capture all of the kind of variations that we expect to see when we deploy this system in people's living rooms yeah they play their games so in the end do you actually know what the algorithm is doing we can get a sense of what it's trying to do and how it's roughly working but we couldn't possibly really understand what exactly is going on the same approach of machine learning has been used in other applications for example this algorithm is able to do something that for a long time was thought to be a skill exclusive to neuro surgeons and radiologists from an MRI the algorithm can identify and map a brain tumor in 3d meaning that a job that normally takes an hour can be done in a matter of minutes professor Chris Bishop is interested in developing the concept of machine learning even further to create algorithms that can learn just like we do directly from experience so this demonstration I think illustrates the the direction that algorithms will go in the years ahead okay I can see a lot of films up here so what is it what's the algorithm gonna do what we've got is a couple of hundred of those commonly watched films and what it's going to do it's going to learn about your personal likes and dislikes okay now it's already been trained so it's a machine learning algorithm behind the scenes but it's already been trained on data from about 10,000 people what this going to do now is to learn about your your preferences now the moment it knows nothing about you so these films are just arranged at random on the screen so what I need you to do is to to find one of these films either one that you like or one that you don't like if you like it you can drag it across to the green region if you don't like it across to the red region all right so Rushmore I'm a big fan of Rushmore like Russian roulette stick that okay right so what's happening now is that if a film was down the right hand side near the green region it's very confident you'll like it okay so down here close to the red region it's very confident you won't like it and in the middle it's 50/50 it doesn't really know uh-huh so what if I choose a movie in the middle here I'm not a great Austin Powers fan all right let's um shoot that one okay so you see there they're beginning to spread out sideways a little spring me a little bit more confident yeah yeah it's pretty good yeah I'm a big fan of dr. Strangelove and yeah I'm a big fan of Woody Allen but spinal tap no I think it thinks I'll like that so that's interesting so when when it was confident you lights them and you said you liked them not much happened because it didn't it didn't learn much from that age yeah well it's confident you'd like it in the case of spinal tap who said I don't like it there was a big change it's learning things from me I'm actually changing the algorithm as I interact with it exactly whereas Kinect was was trained in the laboratory and then frozen this algorithm continues to adapts and continues to evolve throughout its life the more films that you rate as like and don't like the more it knows about you and the better evil it is to make good recommendations this algorithm is beginning to feel much more human in the way that it interacts with the world is that your aim to find a way to produce algorithms so a bit like the way that we exactly it's a step down that very long road to producing machines that really are as capable as the human brain but a long way to go but this is a small step in that direction because it's not fixed anymore it's now continuing to learn just the same way that we continue to learn sort of in our daily lives I think we're just starting to realize the full potential of algorithms and I have one more place I want to visit which I'm told will give me a glimpse of just how much they're able to do for us [Applause] it's a world where almost everything is automated [Music] we're algorithms are in control it's the largest automated grocery warehouse on earth it belongs to the online grocery retailer Accardo and it's the equivalent of 45 supermarkets in 1 over 2 million items go through this warehouse every day that anyone's fine there's something like 7,000 crates going over 25 kilometres of track and controlling every aspect of this astonishing spectacle our algorithms [Music] each of those red crate is part of a customer order and and there are that and they may go on from here to find other items that they want across the warehouse until they're eventually finished loaded onto a van and then driven out by our routing systems on a on a route which is in many ways it's solving you know problems like the Traveling Salesman problem I mean there are decisions being made all over the place is a reg Kray goes this way then that way but the complexity behind all of this is beyond what you know any human could could control or sold and and that is where these these algorithms these problem-solving techniques come in to overcome those challenges [Music] everywhere you look the invisible hand of the algorithm is at work forecasting algorithms monitor and replenish the stock of more than 43,000 products anticipating customer demand control system algorithms manage the traffic of the more than 7,000 crates around the warehouse and van routing algorithms control the movement at the fleet of over 1500 vans testing over 4 million different route combinations every second you can almost see the mind of the machine at work and it's not a static process so that's why there's a huge amount of machine learning in here and so it's like a self adapting organism it's constantly having to learn how to do it better and people couldn't do that the machine has to tune itself so who would you say was actually in control of the whole thing well ultimately it's the algorithms that are in control now I think I'm getting some algorithmic flushes I look at this amazing thing in some sense this warehouse is like a little microcosm of the modern world algorithms are running everything from search engines on the internet sat-nav even keeping our credit card secure our world wouldn't function without the power of these algorithms the Open University have produced a free path for you to learn create and discover more about digital technology past and present to order your copy phone oh three hundred three oh three oh five five three or follow the link below to the Open University [Applause] coming up next tonight a flash of inspiration may change your life or just your lunch and how does it come about horizon investigates here on bbc4 next [Music] [Applause] [Music] you", metadata={'source': 'kiFfp-HAu64', 'title': '"The Secret Rules of Modern Living Algorithms" - Documentary.', 'description': 'Unknown', 'view_count': 238314, 'thumbnail_url': 'https://i.ytimg.com/vi/kiFfp-HAu64/hq720.jpg', 'publish_date': '2017-09-04 00:00:00', 'length': 3514, 'author': 'MindLensMovies'})]